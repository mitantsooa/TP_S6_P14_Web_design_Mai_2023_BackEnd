CREATE TABLE ADMIN(
    ID SERIAL PRIMARY KEY,
    PSEUDO VARCHAR(50),
    MOTDEPASSE VARCHAR(50)
);

CREATE TABLE UTILISATEUR(
    ID SERIAL PRIMARY KEY,
    NOM VARCHAR(50),
    PRENOM VARCHAR(50),
    MAIL VARCHAR(150),
    MOTDEPASSE VARCHAR(50),
    SOLDE FLOAT DEFAULT 0
);

CREATE TABLE DEMANDE(
    ID SERIAL PRIMARY KEY,
    IDUTILISATEUR INT4 REFERENCES UTILISATEUR(ID),
    MONTANT FLOAT,
    ETAT INT4 DEFAULT 0,
    DATEDEMANDE TIMESTAMP
);

CREATE TABLE CATEGORIE(
    ID SERIAL PRIMARY KEY,
    NOM VARCHAR(50),
    DUREEMAX TIME,
    ETAT INT4 DEFAULT 0
);

CREATE TABLE PRODUIT(
    ID SERIAL PRIMARY KEY,
    NOM VARCHAR(100),
    PRIX FLOAT,
    UTILISATEURID INT4 REFERENCES UTILISATEUR(ID),
    CATEGORIEID INT4 REFERENCES CATEGORIE(ID),
    DATEENCHERISER TIMESTAMP,
    DUREE TIME,
    ETAT INT4 DEFAULT 0
);

CREATE TABLE HISTORIQUEUTILISATEUR(
    ID SERIAL PRIMARY KEY,
    NOM VARCHAR(100),
    PRIX FLOAT,
    UTILISATEURIDVENDEUR INT4 REFERENCES UTILISATEUR(ID),
    UTILISATEURIDACHETEUR INT4 REFERENCES UTILISATEUR(ID),
    CATEGORIEID INT4 REFERENCES CATEGORIE(ID),
    DATEENCHERISER TIMESTAMP,
    DUREE TIME
);
CREATE TABLE CHIFFREAFFAIRE(
    ID SERIAL PRIMARY KEY,
    PRIX FLOAT,
    DATEAFFAIRE TIMESTAMP,
    PRODUITID INT4 REFERENCES PRODUIT(ID)
);

CREATE TABLE COMMISSION(
    ID SERIAL PRIMARY KEY,
    PRIX FLOAT,
    DATECOMMISSION DATE,
    IDPRODUIT INT4 REFERENCES PRODUIT(ID)
);

CREATE TABLE TauxComission (
    id SERIAL PRIMARY KEY,
    taux float,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO TauxComission VALUES (DEFAULT,10,CURRENT_TIMESTAMP);

CREATE TABLE Photo (
    id SERIAL PRIMARY KEY,
    sary TEXT,
    IDPRODUIT INT REFERENCES PRODUIT(ID)
);

-- TOP 5 DES CATEGORIES ***
CREATE OR REPLACE VIEW TOP5_CATEGORIEPRODUIT AS
    SELECT
        C.ID,
        C.NOM,
        COUNT(*) NBR
    FROM
        CATEGORIE C
        JOIN PRODUIT P
        ON C.ID = P.CATEGORIEID
    GROUP BY
        C.ID
    ORDER BY
        NBR DESC LIMIT 5;

-- TOP 5 DES CATEGORIE RENTABLE
CREATE OR REPLACE VIEW CATEGORIEPRODUIT AS
    SELECT
        C.ID,
        C.NOM,
        P.ID AS IDPRODUIT
    FROM
        CATEGORIE C
        JOIN PRODUIT P
        ON C.ID = P.CATEGORIEID;

CREATE OR REPLACE VIEW COMMISSIONCATEGORIE AS
    SELECT
        CATEGORIEPRODUIT.*,
        COMMISSION.PRIX
    FROM
        COMMISSION
        JOIN CATEGORIEPRODUIT
        ON COMMISSION.IDPRODUIT = CATEGORIEPRODUIT.IDPRODUIT;

CREATE OR REPLACE VIEW TOP5_CATEGORIERENTABLETMP AS
    SELECT
        ID,
        SUM(PRIX) TOTAL
    FROM
        COMMISSIONCATEGORIE
    GROUP BY
        ID
    ORDER BY
        TOTAL DESC LIMIT 5;

-- ***
CREATE OR REPLACE VIEW TOP5_CATEGORIERENTABLE AS
    SELECT
        TOP5_CATEGORIERENTABLETMP.ID,
        TOP5_CATEGORIERENTABLETMP.TOTAL,
        CATEGORIE.NOM
    FROM
        TOP5_CATEGORIERENTABLETMP
        JOIN CATEGORIE
        ON TOP5_CATEGORIERENTABLETMP.ID = CATEGORIE.ID;

-- CHIFFRE D'AFFAIRE
-- MOYENNE PAR JOUR

-- CHIFFRE D'AFFAIRE PAR JOUR
CREATE OR REPLACE VIEW CA_PARJOUR AS
    SELECT
        SUM(PRIX) AS PRIX
    FROM
        COMMISSION
    GROUP BY
        DATECOMMISSION;

-- CHIFFRE D'AFFAIRE MOYENNE PAR JOUR ***
CREATE OR REPLACE VIEW CAM_PARJOUR AS
    SELECT
        (SUM(PRIX) / COUNT(*)) MOYENNE
    FROM
        CA_PARJOUR;

-- CHIFFRE D'AFFAIRE PAR MOIS
CREATE OR REPLACE VIEW CA_PARMOIS AS
    SELECT
        PRIX,
        EXTRACT(MONTH
    FROM
        DATECOMMISSION)
    FROM
        COMMISSION;

-- CHIFFRE D'AFFAIRE MOYENNE PAR MOIS ****
CREATE OR REPLACE VIEW CAM_PARMOIS AS
    SELECT
        (SUM(PRIX) / COUNT(*)) AS MOYENNE
    FROM
        CA_PARMOIS;

-- CHIFFRE D'AFFAIRE PAR AN
CREATE OR REPLACE VIEW CA_PARAN AS
    SELECT
        PRIX,
        EXTRACT(YEAR
    FROM
        DATECOMMISSION)
    FROM
        COMMISSION;

-- CHIFFRE D'AFFAIRE MOYENNE PAR AN ***
CREATE OR REPLACE VIEW CAM_PARAN AS
    SELECT
        (SUM(PRIX)) AS MOYENNE
    FROM
        CA_PARMOIS  GROUP BY  date_part;


CREATE OR REPLACE VIEW DemandeUtilisateur AS
SELECT Demande.id,nom,prenom,mail,solde,montant,datedemande,etat,idUtilisateur 
FROM Demande 
JOIN Utilisateur 
ON Demande.idUtilisateur=Utilisateur.id;


CREATE OR REPLACE VIEW Enchere AS 
SELECT  id,nom,prix,utilisateurid,(SELECT nom FROM Categorie WHERE Categorie.id = Produit.categorieid LIMIT 1) categorie,dateencheriser,duree,etat,
CASE 
    WHEN (DATEENCHERISER+DUREE)>CURRENT_TIMESTAMP THEN 'en cours'
    ELSE 'termine'
END status,
(dateencheriser + duree) AS datefin FROM Produit;

CREATE OR REPLACE VIEW EnchereCommission AS
SELECT *,
((((SELECT taux FROM TauxComission ORDER BY date DESC LIMIT 1)/100))*prix) comission
FROM Enchere;

--HISTORIQUE UTILISATEUR
SELECT
    H.ID,
    H.NOM,
    H.PRIX,
    H.DATEENCHERISER,
    H.DUREE,
    C.NOM AS CATEGORIE
FROM
    HISTORIQUEUTILISATEUR H
    JOIN CATEGORIE C
    ON C.ID = H.CATEGORIEID
WHERE;